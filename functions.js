
// ....... ОСТАТОЧНЫЕ ПАРАМЕТРЫ ....................
// Остаточные параметры могут быть обозначены через три точки .... Буквально это значит: «собери оставшиеся параметры и положи их в массив».

function sum(a, b) {
    return a + b
}

console.log(sum(1 ,2 ,3 ,4 ));


const sumAll = (...rest) => {
    return rest.reduce((acc, val) => acc + val, 0)
}

console.log(sumAll(1, 2, 3 ,4 ,5));



// ....... ОПЕРАТОР РАСШИРЕНИЯ ....................
// Когда ...arr используется при вызове функции, он «расширяет» перебираемый объект arr в список аргументов.

let arr1 = [3, 5, 3, 3, 3, 3]
let arr2 = [3, 5, 6, 7, 8, 3]
let arrO = ['hello', ...arr1, ... arr2]
console.log(arrO);

/* 
Итого
Когда мы видим "..." в коде, это могут быть как остаточные параметры, так и оператор расширения.

Как отличить их друг от друга:

Если ... располагается в конце списка параметров функции, то это «остаточные параметры». Он собирает остальные неуказанные аргументы и делает из них массив.
Если ... встретился в вызове функции или где-либо ещё, то это «оператор расширения». Он извлекает элементы из массива.
Полезно запомнить:

Остаточные параметры используются, чтобы создавать новые функции с неопределённым числом аргументов.
С помощью оператора расширения можно вставить массив в функцию, которая по умолчанию работает с обычным списком аргументов.
 */